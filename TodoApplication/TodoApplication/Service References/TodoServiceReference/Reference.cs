//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TodoApplication.TodoServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ToDoItem", Namespace="http://schemas.datacontract.org/2004/07/TodoServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class ToDoItem : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool CompletedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ItemField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Completed {
            get {
                return this.CompletedField;
            }
            set {
                if ((this.CompletedField.Equals(value) != true)) {
                    this.CompletedField = value;
                    this.RaisePropertyChanged("Completed");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Item {
            get {
                return this.ItemField;
            }
            set {
                if ((object.ReferenceEquals(this.ItemField, value) != true)) {
                    this.ItemField = value;
                    this.RaisePropertyChanged("Item");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TodoServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddToList", ReplyAction="http://tempuri.org/IService/AddToListResponse")]
        TodoApplication.TodoServiceReference.ToDoItem AddToList(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddToList", ReplyAction="http://tempuri.org/IService/AddToListResponse")]
        System.Threading.Tasks.Task<TodoApplication.TodoServiceReference.ToDoItem> AddToListAsync(string value);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetToDoList", ReplyAction="http://tempuri.org/IService/GetToDoListResponse")]
        System.Collections.Generic.List<TodoApplication.TodoServiceReference.ToDoItem> GetToDoList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetToDoList", ReplyAction="http://tempuri.org/IService/GetToDoListResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<TodoApplication.TodoServiceReference.ToDoItem>> GetToDoListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateItem", ReplyAction="http://tempuri.org/IService/UpdateItemResponse")]
        void UpdateItem(TodoApplication.TodoServiceReference.ToDoItem todo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/UpdateItem", ReplyAction="http://tempuri.org/IService/UpdateItemResponse")]
        System.Threading.Tasks.Task UpdateItemAsync(TodoApplication.TodoServiceReference.ToDoItem todo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : TodoApplication.TodoServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<TodoApplication.TodoServiceReference.IService>, TodoApplication.TodoServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TodoApplication.TodoServiceReference.ToDoItem AddToList(string value) {
            return base.Channel.AddToList(value);
        }
        
        public System.Threading.Tasks.Task<TodoApplication.TodoServiceReference.ToDoItem> AddToListAsync(string value) {
            return base.Channel.AddToListAsync(value);
        }
        
        public System.Collections.Generic.List<TodoApplication.TodoServiceReference.ToDoItem> GetToDoList() {
            return base.Channel.GetToDoList();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<TodoApplication.TodoServiceReference.ToDoItem>> GetToDoListAsync() {
            return base.Channel.GetToDoListAsync();
        }
        
        public void UpdateItem(TodoApplication.TodoServiceReference.ToDoItem todo) {
            base.Channel.UpdateItem(todo);
        }
        
        public System.Threading.Tasks.Task UpdateItemAsync(TodoApplication.TodoServiceReference.ToDoItem todo) {
            return base.Channel.UpdateItemAsync(todo);
        }
    }
}
